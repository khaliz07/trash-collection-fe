import { PrismaClient, UserStatus } from "@prisma/client";
import bcrypt from "bcryptjs";

export async function seedUsers(prisma: PrismaClient) {
  console.log("üë• Creating sample users...");

  const users = [
    {
      id: "user-1",
      email: "nguyen.van.an@example.com",
      name: "Nguy·ªÖn VƒÉn An",
      phone: "0912345678",
      address: "12 Nguy·ªÖn Tr√£i, Qu·∫≠n 1, TP. H·ªì Ch√≠ Minh",
      status: "ACTIVE" as UserStatus,
    },
    {
      id: "user-2",
      email: "tran.thi.bich@example.com",
      name: "Tr·∫ßn Th·ªã B√≠ch",
      phone: "0913456789",
      address: "45 L√™ L·ª£i, Qu·∫≠n H·∫£i Ch√¢u, ƒê√† N·∫µng",
      status: "ACTIVE" as UserStatus,
    },
    {
      id: "user-3",
      email: "le.quang.dung@example.com",
      name: "L√™ Quang D≈©ng",
      phone: "0914567890",
      address: "78 Phan ƒê√¨nh Ph√πng, Ba ƒê√¨nh, H√† N·ªôi",
      status: "SUSPENDED" as UserStatus,
    },
    {
      id: "user-4",
      email: "pham.minh.chau@example.com",
      name: "Ph·∫°m Minh Ch√¢u",
      phone: "0915678901",
      address: "23 Tr·∫ßn H∆∞ng ƒê·∫°o, TP. Nha Trang",
      status: "ACTIVE" as UserStatus,
    },
    {
      id: "user-5",
      email: "vo.thi.hanh@example.com",
      name: "V√µ Th·ªã H·∫°nh",
      phone: "0916789012",
      address: "56 Nguy·ªÖn Hu·ªá, TP. Hu·∫ø",
      status: "INACTIVE" as UserStatus,
    },
    {
      id: "user-6",
      email: "hoang.van.duc@example.com",
      name: "Ho√†ng VƒÉn ƒê·ª©c",
      phone: "0917890123",
      address: "89 H√πng V∆∞∆°ng, TP. C·∫ßn Th∆°",
      status: "ACTIVE" as UserStatus,
    },
    {
      id: "user-7",
      email: "dao.thi.mai@example.com",
      name: "ƒê√†o Th·ªã Mai",
      phone: "0918901234",
      address: "34 L√Ω Th∆∞·ªùng Ki·ªát, TP. H·∫£i Ph√≤ng",
      status: "ACTIVE" as UserStatus,
    },
    {
      id: "user-8",
      email: "bui.thanh.son@example.com",
      name: "B√πi Thanh S∆°n",
      phone: "0919012345",
      address: "67 Quang Trung, TP. Vinh",
      status: "SUSPENDED" as UserStatus,
    },
  ];

  const hashedPassword = await bcrypt.hash("123456", 10);

  for (const userData of users) {
    await prisma.user.upsert({
      where: { id: userData.id },
      update: {},
      create: {
        ...userData,
        password: hashedPassword,
        role: "USER",
        isEmailVerified: true,
        latitude: Math.random() * 0.1 + 10.762622, // Random coords around Ho Chi Minh City
        longitude: Math.random() * 0.1 + 106.660172,
      },
    });
  }

  console.log(`‚úÖ Created ${users.length} sample users`);
}
